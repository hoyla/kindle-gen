AWSTemplateFormatVersion: '2010-09-09'
Description: Converting print-sent content to Amazon's KPP NITF format

Parameters:
  Stack:
    Description: Stack name
    Type: String
    Default: content-api-kindle-gen
  App:
    Description: Application name
    Type: String
    Default: kindle-gen
  Stage:
    Description: Stage name
    Type: String
    AllowedValues:
      - CODE
      - PROD
    Default: CODE
  ContentApiKey:
    Description: 'A key generated by https://bonobo.capi.gutools.co.uk'
    Type: String
  ContentApiUrl:
    Description: 'The Content API URL to retrieve the articles to publish'
    Type: String
  DeployBucket:
    Description: Bucket where RiffRaff uploads artifacts on deploy
    Type: String
    Default: content-api-dist

Resources:
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: logs
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: arn:aws:logs:*:*:*
        - PolicyName: lambda
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource: "*"
        - PolicyName: publishToS3
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - s3:PutObject
                - s3:ListAllMyBuckets  # AWScala uses it to find the bucket
              Resource: !Sub "arn:aws:s3:::kindle-gen-published-files/${Stage}/*"
  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${App}-${Stage}
      Code:
        S3Bucket:
          Ref: DeployBucket
        S3Key: !Sub ${Stack}/${Stage}/${App}/${App}.jar
      Environment:
        Variables:
          Stage: !Ref Stage
          Stack: !Ref Stack
          App: !Ref App
          CONTENT_API_KEY: !Ref ContentApiKey
          CONTENT_API_URL: !Ref ContentApiUrl
      Description: Converting content to NITF format
      Handler: com.gu.kindlegen.Lambda::handler
      MemorySize: 512
      Role: !GetAtt ExecutionRole.Arn
      Runtime: java8
      Timeout: 300

#  DailyEvent:
#    Type: AWS::Events::Rule
#    Properties:
#      Description: Event sent to process today's data
#      ScheduleExpression: cron(30 1 * * ? *)  # Run at 01:30 AM every day
#      Targets:
#        - Id: Lambda
#          Arn: !GetAtt Lambda.Arn
#
#  DailyEventLambdaPermission:
#    Type: AWS::Lambda::Permission
#    Properties:
#      Action: lambda:InvokeFunction
#      FunctionName: !GetAtt Lambda.Arn
#      Principal: events.amazonaws.com
#      SourceArn: !GetAtt DailyEvent.Arn
